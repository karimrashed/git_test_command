## First of please initialize your project. This is first task of git. One project need one time initiaize.






1) git init

## if you want to know what is change after the init command then
2) git ls
3) git ls -al

## if you open a file and write there somthing
4) sudo gedit /home/rashed/git/new.txt

## any file added into git
5) git add

##after added a file into git then need to coomit.
6) git status
7)git coomit -m "<status>" <file name>

## if you want to see your file changes then 
8) git diff

##if you want to see your full log first to last
9) git log

#### git show function work use this and log no shows us what is change in our different task  ####
10) git show

### initialize commit diff and log work done ######

## If want to go back previous commit then 
11) git show commit#
12) gi checkout commit# (go back previous commit# state)
13) git checkout master (go back current state)
14) cat <filename>

## we want to only one file back to previous state

15)git checkout commit# <filename>
16)cat <filename>
17)git checkout master -f <only one file back current state>
18)cat <filename>

## if we give accident commit reset has 2 state 
19)git reset --soft commit#
20)git diff HEAD
21)git reset --hard commit#
22) cat <file name>
23)git reflog
24) git reset <HEAD@{8}>
25) git reset --hard

##without new commit but want to change a file

26)git add <fielname>
27) git commit --amend
28) git log

###### back previous commit, Reset, and Amend######

## without commit working directory test purpose
29) git stash (update line delete not permanent)
30) git stash pop/ apply (recover previous line)
31) git satsh list
32) git stash pop stash@{1} <Specific stash line>
33)git stash clear
34)git clean -f -n
35)git clean -f 

### commit git stash and clean####
## make a black project
36) git clone <repository name> 
## add remote
37) git remote add origin git@github.com:karimrashed/git_test_command.git
38) git remote show
39) git remote show origin
40) git push origin master

## want to Pull 
41) git pull origin master
##completed PUSH and Pull and Remote ##

## git ignore file 

42) zip new.zip new.txt
43)vim .gitignore

## conflict resolve

44) git mergetool
### alias making

45) .bashrc/ 
    alias ms ="git status"
46) vim ~/myaliases
47) source ~/.myaliases
###### Git completed full ####

